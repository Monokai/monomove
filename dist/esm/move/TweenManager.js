import{defineProperty as t,classStaticPrivateFieldSpecGet as e,classStaticPrivateFieldSpecSet as i,classStaticPrivateMethodGet as s}from"../_virtual/_rollupPluginBabelHelpers.js";import a from"../math/BezierEasing.js";class r{static getAll(){return e(this,r,n)}static removeAll(){e(this,r,n).forEach((t=>{t.isPlaying=!1})),e(this,r,n).length=0,i(this,r,u,new Map)}static add(t){e(this,r,n).push(t)}static remove(t){const i=e(this,r,n).indexOf(t);-1!==i&&e(this,r,n).splice(i,1)}static onlyHasDelayedTweens(t){return e(this,r,n).length>0&&e(this,r,n).every((e=>t<e.startTime))}static onTick(t){return 0!==e(this,r,n).length&&(i(this,r,o,t),e(this,r,c).length=0,e(this,r,n).forEach(s(this,r,l),this),e(this,r,c).forEach(s(this,r,h),this),!0)}static setBezierIterations(t){this.bezierIterations=t}static setBezierCacheSize(t){this.bezierCacheSize=t}static getEasingFromCache(t){return e(this,r,u).has(t)||e(this,r,u).set(t,new a(t)),e(this,r,u).get(t)}}function h(t){t.isPlaying||this.remove(t)}function l(t){t.update(e(this,r,o))||e(this,r,c).push(t)}var n={writable:!0,value:[]},c={writable:!0,value:[]},o={writable:!0,value:0},u={writable:!0,value:new Map};t(r,"bezierIterations",null),t(r,"bezierCacheSize",null);export{r as default};
