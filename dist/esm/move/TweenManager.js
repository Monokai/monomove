import e from"../math/BezierEasing.js";class t{static#e=[];static#t=[];static#s=0;static#i=new Map;static bezierIterations=null;static bezierCacheSize=null;static getAll(){return this.#e}static removeAll(){this.#e.forEach((e=>{e.isPlaying=!1})),this.#e.length=0,this.#i=new Map}static add(e){this.#e.push(e)}static remove(e){const t=this.#e.indexOf(e);-1!==t&&this.#e.splice(t,1)}static#a(e){e.isPlaying||this.remove(e)}static#n(e){e.update(this.#s)||this.#t.push(e)}static onlyHasDelayedTweens(e){return this.#e.length>0&&this.#e.every((t=>e<t.startTime))}static onTick(e){return 0!==this.#e.length&&(this.#s=e,this.#t.length=0,this.#e.forEach(this.#n,this),this.#t.forEach(this.#a,this),!0)}static setBezierIterations(e){this.bezierIterations=e}static setBezierCacheSize(e){this.bezierCacheSize=e}static getEasingFromCache(t){return this.#i.has(t)||this.#i.set(t,new e(t)),this.#i.get(t)}}export{t as default};
